// –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
const token = localStorage.getItem("token");
if (document.referrer.includes("login.html") && token) {
    const role = JSON.parse(atob(token.split('.')[1]))?.role;
    if (role === "ADMIN") window.location.href = "admin.html";
    else if (role === "SELLER") window.location.href = "seller.html";
    else window.location.href = "products.html";
}

/*// –ü—Ä–∏–ª–∏–ø–∞–Ω–∏–µ —à–∞–ø–∫–∏
window.addEventListener("scroll", () => {
    const header = document.getElementById("mainHeader");

    if (window.scrollY > 20) {
        header.classList.remove("floating-center");
        header.classList.add("sticky-top");
    } else {
        header.classList.remove("sticky-top");
        header.classList.add("floating-center");
    }
});*/

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const overlay = document.getElementById('loginModal');

document.querySelector('a[href="login.html"]').addEventListener('click', e=>{
    e.preventDefault();
    overlay.style.display = 'flex';
    document.documentElement.classList.add('modal-open');  // <html>
    document.body.classList.add('modal-open');             // <body>
});


// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal(){
    overlay.style.display = 'none';
    document.documentElement.classList.remove('modal-open');
    document.body.classList.remove('modal-open');
}

/* –∫—Ä–µ—Å—Ç–∏–∫ */
document.querySelector('.close-btn').onclick = closeModal;

/* –∫–ª–∏–∫ –≤–Ω–µ –æ–∫–Ω–∞ */
overlay.addEventListener('click', e=>{
    if (e.target === overlay) closeModal();
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞
document.getElementById("loginForm").addEventListener("submit", async (e) => {
  e.preventDefault();

  const email = document.getElementById("loginEmail").value;
  const password = document.getElementById("loginPassword").value;

  try {
    const res = await fetch("http://localhost:8080/api/auth/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, password })  // ‚Üê –í–û–¢ –≠–¢–ê –°–¢–†–û–ö–ê
    });

        const result = await res.json();

        if (res.ok) {
            localStorage.setItem("token", result.token);
            const payload = JSON.parse(atob(result.token.split('.')[1]));
            if (payload.role === "ADMIN") window.location.href = "admin.html";
            else if (payload.role === "SELLER") window.location.href = "seller.html";
            else window.location.href = "products.html";
        } else {
            document.getElementById("loginMessage").textContent = "‚ùå " + (result.message || "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ");
        }
    } catch (err) {
        console.error(err);
        document.getElementById("loginMessage").textContent = "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
    }
});

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
/* ------------------------------------------
   –ü–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ (—Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –∫–∞—Ç.)
-------------------------------------------*/
async function renderProducts(categoryId = null) {
  const token   = localStorage.getItem('token') || '';
  const headers = token ? { Authorization: 'Bearer ' + token } : {};

  // –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äì –¥–æ–±–∞–≤–ª—è–µ–º query-–ø–∞—Ä–∞–º–µ—Ç—Ä ?category=ID
 const url = categoryId
       ? `http://localhost:8080/api/products?category=${categoryId}`
       : 'http://localhost:8080/api/products';

  try {
    const res = await fetch(url, { headers });
    if (!res.ok) throw new Error('HTTP ' + res.status);

    const products = await res.json();
    const grid = document.getElementById('productList');          // <div id="productList">
    if (!grid) { console.error('#productList not found'); return; }

    grid.innerHTML = '';
    products.forEach(p => grid.insertAdjacentHTML('beforeend', cardHTML(p)));

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', err);
  }
}

/* ------------------------------------------
   ¬´–ö–∞—Ç–∞–ª–æ–≥¬ª ‚Äì –ø–æ–ø-–∞–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–π
-------------------------------------------*/
const catalogBtn   = document.getElementById('catalogBtn');
const catalogPopup = document.getElementById('catalogPopup');
const categoryList = document.getElementById('categoryList');   // <ul id="categoryList">

catalogBtn?.addEventListener('click', async e => {
  e.preventDefault();
  catalogPopup.style.display = catalogPopup.style.display === 'block' ? 'none' : 'block';
  if (catalogPopup.dataset.filled) return;   // ‚Üê —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–ª–∏ –æ–¥–Ω–∞–∂–¥—ã

  try {
    const res = await fetch('http://localhost:8080/api/categories');
    const cats = await res.json();

    cats.forEach(cat => {
      const li   = document.createElement('li');
      li.textContent = cat.name;
      li.dataset.id  = cat.id;

      li.addEventListener('click', () => {
        catalogPopup.style.display = 'none';          // —Å–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
        renderProducts(cat.id);                       // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
      });

      categoryList.appendChild(li);
    });

    catalogPopup.dataset.filled = '1';
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', err);
  }
});

/* --------------------
   –ó–∞–∫—Ä—ã—Ç—å –ø–æ–ø-–∞–ø –∫–ª–∏–∫–æ–º –º–∏–º–æ
---------------------*/
document.addEventListener('click', e => {
  if (!e.target.closest('.catalog-wrapper')) catalogPopup.style.display = 'none';
});

/* --------------------
   –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
---------------------*/
document.addEventListener('DOMContentLoaded', () => {
  renderProducts();                 // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
});


// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
function switchToRegister() {
  document.getElementById("loginForm").style.display = "none";
  document.getElementById("registerForm").style.display = "block";
}


function switchToLogin() {
  document.getElementById("registerForm").style.display = "none";
  document.getElementById("loginForm").style.display = "block";
}


// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
document.getElementById("registerForm").addEventListener("submit", async (e) => {
  e.preventDefault();

  const username = document.getElementById("regUsername").value;
  const email = document.getElementById("regEmail").value;
  const password = document.getElementById("regPassword").value;

  try {
    const res = await fetch("http://localhost:8080/api/auth/register", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, email, password })
    });

    const result = await res.json();

    if (res.ok) {
      document.getElementById("registerMessage").textContent = "‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è! –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ö–æ–¥.";
      document.getElementById("registerForm").reset();
    } else {
      document.getElementById("registerMessage").textContent = "‚ùå " + (result.message || "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
    }
  } catch (err) {
    console.error(err);
    document.getElementById("registerMessage").textContent = "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É";
  }
});



document.addEventListener("DOMContentLoaded", () => {
  const token = localStorage.getItem("token");

  if (token) {
    try {
      const payload = JSON.parse(atob(token.split('.')[1]));
      const username = payload?.sub || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
      const role = payload?.role;

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const usernameLink = document.getElementById("usernameLink");
      const usernameDisplay = document.getElementById("usernameDisplay");
      if (usernameLink && usernameDisplay) {
        usernameDisplay.textContent = username;
        usernameLink.style.display = "inline-block";

        // –ù–∞–∑–Ω–∞—á–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        usernameLink.addEventListener("click", (e) => {
          e.preventDefault();
          if (role === "ADMIN") {
            window.location.href = "admin.html";
          } else if (role === "SELLER") {
            window.location.href = "seller.html";
          } else {
            window.location.href = "products.html";
          }
        });
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ —Ç–æ–∫–µ–Ω–∞:", err);
    }
  }
});

/* ---------- –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã products.html ---------- */
async function loadAllProducts() {
  try {
    const res = await fetch("http://localhost:8080/api/products");
    if (!res.ok) throw new Error("HTTP " + res.status);
    const products = await res.json();

    // id –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ¬≠‚Äì –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª—å–Ω–æ –µ—Å—Ç—å –≤ HTML
    const grid = document.getElementById("productGrid");   // –Ω–∞–ø—Ä–∏–º–µ—Ä, <div id="productGrid">
    if (!grid) { console.error("#productGrid not found"); return; }

    grid.innerHTML = "";

    products.forEach(p => {
      const card = document.createElement("div");
      card.classList.add("product-card");

      /* 1) –≤—ã—á–∏—Å–ª—è–µ–º URL –∫–∞—Ä—Ç–∏–Ω–∫–∏ */
      const imgSrc = p.imagePath
            ? `/uploads/${p.imagePath}`
            : '/images/placeholder.jpg';     // fallback-–∑–∞–≥–ª—É—à–∫–∞

      /* 2) —Ñ–æ—Ä–º–∏—Ä—É–µ–º HTML –∫–∞—Ä—Ç–æ—á–∫–∏ */
      card.innerHTML = `
        <img src="${imgSrc}" alt="${p.name}"
             onerror="this.src='/images/placeholder.jpg'">
        <h3>${p.name}</h3>
        <p>${p.description ?? ""}</p>
        <p><strong>${p.price} ‚ÇΩ</strong></p>
        <button onclick="addToCart(${p.id})">üõí –í –∫–æ—Ä–∑–∏–Ω—É</button>
      `;

      grid.appendChild(card);
    });

  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:", err);
  }
}

document.addEventListener("DOMContentLoaded", () => {
});

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ª–∏–ø–∫–∞—è —à–∞–ø–∫–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
document.addEventListener("DOMContentLoaded", () => {
  const header    = document.getElementById("mainHeader");
  const floatGap  = 20;                    // –∫–æ–≥–¥–∞ ¬´–æ—Ç—Ä—ã–≤–∞—Ç—å¬ª –æ—Ç –≤–µ—Ä—Ö–∞

  const onScroll = () => {
      if (window.scrollY > floatGap){
          header.classList.add("sticky");
      } else {
          header.classList.remove("sticky");
      }
  };

  onScroll();                              // –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  window.addEventListener("scroll", onScroll, { passive:true });
});





